/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "io.freefair.lombok" version "5.2.1"
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

repositories {
    mavenLocal()
    mavenCentral()


    maven {
        url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
    }
    maven {
        url = uri('https://ci.ender.zone/plugin/repository/everything/')
    }
    maven {
        url = uri('https://repo.extendedclip.com/content/repositories/placeholderapi/')
    }
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }

    maven {
        credentials {
            username "$ghUser"
            password "$ghPass"
        }
        url = "https://maven.pkg.github.com/DumbDogDiner/buildtoolspackages/" }


    /*maven {
        credentials {
            username "$ghUser"
            password "$ghPass"
        }
        url = "https://maven.pkg.github.com/DumbDogDiner/StickyAPI/" }*/

    maven {
        credentials {
            username "$ghUser"
            password "$ghPass"
        }
        url = "https://maven.pkg.github.com/DumbDogDiner/StickyCommands/" }
    //flatDir {dirs "E:\\DDD_DEV\\StickyCommands\\build\\libs"}

}

dependencies {
    compileOnly 'com.dumbdogdiner.buildtools:spigot:1.16.3-SNAPSHOT'
    compileOnly 'net.ess3:EssentialsX:2.17.0'
    compileOnly 'me.clip:placeholderapi:2.10.4'
    compileOnly 'org.jetbrains:annotations:20.0.0'
    compileOnly 'com.dumbdogdiner.buildtools:spigot:1.16.3-SNAPSHOT'

    compileOnly "com.dumbdogdiner:stickycommands:3.1.4"
}

group = 'xyz.nkomarn'
version = '1.6.2-DDD'
sourceCompatibility = '1.11'

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

tasks.build.dependsOn tasks.shadowJar
shadowJar {
    archiveClassifier.set("")
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
}

task sources(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}


publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
